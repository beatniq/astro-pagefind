---
import {JsonStringify} from "../jsonFunction.ts";
export interface Props {
  readonly id?: string;
  readonly className?: string;
  readonly query?: string;
  readonly uiOptions?: Record<string, any>;
}

const {id, className, query, uiOptions = {}} = Astro.props;
const bundlePath = `${import.meta.env.BASE_URL}pagefind/`;
---
<div
  id={id}
  class:list={[className, "pagefind-init"]}
  data-pagefind-ui
  data-bundle-path={bundlePath}
  data-query={query}
  data-ui-options={JsonStringify(uiOptions)}
>
</div>
<script>
  import {PagefindUI} from "@pagefind/default-ui";
  import {JsonParse} from "../jsonFunction.ts";

  function initPageFind() {
    const allSelector = "[data-pagefind-ui]";
    for (const el of document.querySelectorAll(`${allSelector}.pagefind-init`)) {
      const elSelector = [
        ...(el.id ? [`#${el.id}`] : []),
        allSelector,
      ].join("");
      const bundlePath = el.getAttribute("data-bundle-path");
      const opts = JsonParse(el.getAttribute("data-ui-options") ?? "{}", true);
      new PagefindUI({
        ...opts,
        element: elSelector,
        bundlePath,
      });
      el.classList.remove("pagefind-init");
      const query = el.getAttribute("data-query");
      if (query) {
        const input = el.querySelector<HTMLInputElement>(`input[type="text"]`);
        if (input) {
          input.value = query;
          input.dispatchEvent(new Event("input", {bubbles: true}));
        }
      }
    }
  }

  document.addEventListener("DOMContentLoaded", initPageFind);
  document.addEventListener("astro:page-load", initPageFind);
</script>
